"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express = require("express");
var artist_1 = require("../models/artist");
var router = express.Router();
router.get('/', function (req, res) {
    artist_1.default.find().then(function (foundArtists) {
        res.json(foundArtists);
    }).catch(function (err) {
        res.json(err);
    });
});
router.get('/:id', function (req, res) {
    artist_1.default.findOne({ _id: req.params.id }).then(function (foundArtist) {
        res.json(foundArtist);
    }).catch(function (err) {
        res.json(err);
    });
});
router.post('/', function (req, res) {
    var newArtist = new artist_1.default();
    newArtist.dateCreated = new Date();
    newArtist.firstName = req.body.firstName;
    newArtist.lastName = req.body.lastName;
    newArtist.email = req.body.email;
    newArtist.username = req.body.username;
    newArtist.password = req.body.password;
    newArtist.busName = req.body.busName;
    newArtist.busType = req.body.busType;
    newArtist.exp = req.body.exp;
    newArtist.pricing = req.body.pricing;
    newArtist.bio = req.body.bio;
    newArtist.allowContact = false;
    newArtist.address = {};
    newArtist.styles = [];
    newArtist.portfolio = [];
    newArtist.save().then(function (createdArtist) {
        res.json(createdArtist);
    }).catch(function (err) {
        res.json(err);
    });
});
router.put('/:id', function (req, res) {
    artist_1.default.findOne({ _id: req.params.id }).then(function (foundArtist) {
        foundArtist.dateCreated = req.body.dateCreated;
        foundArtist.firstName = req.body.firstName;
        foundArtist.lastName = req.body.lastName;
        foundArtist.email = req.body.email;
        foundArtist.username = req.body.username;
        foundArtist.password = req.body.password;
        foundArtist.busName = req.body.busName;
        foundArtist.busType = req.body.busType;
        foundArtist.exp = req.body.exp;
        foundArtist.pricing = req.body.pricing;
        foundArtist.bio = req.body.bio;
        foundArtist.allowContact = req.body.allowContact;
        foundArtist.address = req.body.address;
        foundArtist.styles = req.body.styles;
        foundArtist.portfolio = req.body.portfolio;
        foundArtist.save().then(function (updatedArtist) {
            res.json(updatedArtist);
        }).catch(function (err) {
            res.json(err);
        });
    }).catch(function (err) {
        res.json(err);
    });
});
router.delete('/:id', function (req, res) {
    artist_1.default.remove({ _id: req.params.id }).then(function (deletedArtist) {
        res.json(deletedArtist);
    }).catch(function (err) {
        res.json(err);
    });
});
exports.default = router;
//# sourceMappingURL=data:application/json;base64,