"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express = require("express");
var mongoose = require("mongoose");
var bodyParser = require("body-parser");
var opn = require("opn");
var artists_1 = require("./routes/artists");
var app = express();
var port = 4200;
var CONNECTION_STRING = 'mongodb://inkedingroup:inkedin123@ds127783.mlab.com:27783/inkeddb';
if (CONNECTION_STRING) {
    mongoose.connect(CONNECTION_STRING)
        .then(function () {
        console.log("Successfully connected to " + CONNECTION_STRING + ".");
    })
        .catch(function (err) {
        console.log("Failed to connect to " + CONNECTION_STRING + ".");
    });
}
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(express.static('./public/'));
app.use('/api/artists', artists_1.default);
app.get('*', function (req, res) {
    res.sendfile('public/index.html');
});
app.listen(port, function () {
    console.log("Listening on port " + port + ".");
    opn("http://localhost:" + port);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2FwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlDQUFtQztBQUNuQyxtQ0FBcUM7QUFDckMsd0NBQTBDO0FBQzFDLHlCQUEyQjtBQUUzQiw0Q0FBdUM7QUFFdkMsSUFBTSxHQUFHLEdBQUcsT0FBTyxFQUFFLENBQUM7QUFDdEIsSUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDO0FBRWxCLElBQU0saUJBQWlCLEdBQUcsbUVBQW1FLENBQUM7QUFFOUYsRUFBRSxDQUFDLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO0lBQ3RCLFFBQVEsQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUM7U0FDbEMsSUFBSSxDQUFDO1FBQ0osT0FBTyxDQUFDLEdBQUcsQ0FBQywrQkFBNkIsaUJBQWlCLE1BQUcsQ0FBQyxDQUFDO0lBQ2pFLENBQUMsQ0FBQztTQUNELEtBQUssQ0FBQyxVQUFDLEdBQUc7UUFDVCxPQUFPLENBQUMsR0FBRyxDQUFDLDBCQUF3QixpQkFBaUIsTUFBRyxDQUFDLENBQUM7SUFDNUQsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsR0FBRyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztBQUMzQixHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBRXBELEdBQUcsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0FBRXJDLEdBQUcsQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFFLGlCQUFPLENBQUMsQ0FBQztBQUVqQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxVQUFDLEdBQUcsRUFBRSxHQUFHO0lBQ3BCLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUNwQyxDQUFDLENBQUMsQ0FBQztBQUVILEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFO0lBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1QkFBcUIsSUFBSSxNQUFHLENBQUMsQ0FBQztJQUMxQyxHQUFHLENBQUMsc0JBQW9CLElBQU0sQ0FBQyxDQUFDO0FBQ2xDLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0ICogYXMgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xyXG5pbXBvcnQgKiBhcyBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcclxuaW1wb3J0ICogYXMgb3BuIGZyb20gJ29wbic7XHJcblxyXG5pbXBvcnQgYXJ0aXN0cyBmcm9tICcuL3JvdXRlcy9hcnRpc3RzJztcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuY29uc3QgcG9ydCA9IDQyMDA7XHJcblxyXG5jb25zdCBDT05ORUNUSU9OX1NUUklORyA9ICdtb25nb2RiOi8vaW5rZWRpbmdyb3VwOmlua2VkaW4xMjNAZHMxMjc3ODMubWxhYi5jb206Mjc3ODMvaW5rZWRkYic7XHJcblxyXG5pZiAoQ09OTkVDVElPTl9TVFJJTkcpIHtcclxuICBtb25nb29zZS5jb25uZWN0KENPTk5FQ1RJT05fU1RSSU5HKVxyXG4gIC50aGVuKCgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGBTdWNjZXNzZnVsbHkgY29ubmVjdGVkIHRvICR7Q09OTkVDVElPTl9TVFJJTkd9LmApO1xyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGBGYWlsZWQgdG8gY29ubmVjdCB0byAke0NPTk5FQ1RJT05fU1RSSU5HfS5gKTtcclxuICB9KTtcclxufVxyXG5cclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcclxuXHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJy4vcHVibGljLycpKTtcclxuXHJcbmFwcC51c2UoJy9hcGkvYXJ0aXN0cycsIGFydGlzdHMpO1xyXG5cclxuYXBwLmdldCgnKicsIChyZXEsIHJlcykgPT4ge1xyXG4gIHJlcy5zZW5kZmlsZSgncHVibGljL2luZGV4Lmh0bWwnKTtcclxufSk7XHJcblxyXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcclxuICBjb25zb2xlLmxvZyhgTGlzdGVuaW5nIG9uIHBvcnQgJHtwb3J0fS5gKTtcclxuICBvcG4oYGh0dHA6Ly9sb2NhbGhvc3Q6JHtwb3J0fWApO1xyXG59KTtcclxuIl19